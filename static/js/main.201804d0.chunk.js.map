{"version":3,"sources":["HackerCard/HackerCard.js","Scroller/Scroller.js","App.js","reportWebVitals.js","index.js"],"names":["HackerCard","className","this","props","story","type","href","calculatedUrl","title","displayUrl","score","by","id","descendants","unix","fromNow","time","undefined","topComments","length","map","comment","index","dangerouslySetInnerHTML","__html","text","hnUrl","Component","Scroller","trackScrolling","a","wrappedElement","document","getElementById","isBottom","state","loading","getData","stateData","setState","topStories","storyData","currentStoriesSlice","currentOffset","storiesToLoad","mounted","hnBaseUrl","addEventListener","removeEventListener","startIndex","workingStateObject","fetch","topStoriesResult","json","topStoriesJson","slice","Promise","all","x","storyResponse","kids","result","editedComments","forEach","deleted","push","storyDataArray","currentDataArray","Object","assign","newOffset","hackerCardData","url","urlParts","split","hackerCardProps","storyKey","el","getBoundingClientRect","bottom","window","innerHeight","hackerCards","createHackerCards","size","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.201804d0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Moment from 'react-moment';\nimport './HackerCard.scss';\n\nclass HackerCard extends Component {\n    render() {\n        return (\n            <div className={\"hacker-card \" + this.props.story.type} key={this.props.index}>\n                <h2 className='story-title'>\n                    <a href={this.props.calculatedUrl}>\n                        {this.props.story.title}\n                    </a>\n                </h2>\n                <div className='story-url'>{this.props.displayUrl}</div>\n                <div className='points-info'>\n                    <span>{this.props.story.score} points by {this.props.story.by} </span>\n                    <span id=\"comment-count\">\n                        | {this.props.story.descendants ? this.props.story.descendants : 0} comments \n                    </span>\n                    <span> | <Moment unix fromNow>{this.props.story.time}</Moment></span>\n                      \n                </div>\n                { (this.props.story.type !== 'job') &&\n                    <div className='top-comments'>\n                        {(this.props.topComments !== undefined && this.props.topComments.length > 0) ? <h3>Top Comments</h3> : ''}\n                        {(this.props.topComments !== undefined && this.props.topComments.length > 0) ? this.props.topComments.map((comment, index) =>\n                            <div className=\"comment\" key={index}>\n                                <div className=\"comment-by\">{comment.by} said:</div>\n                                <div className=\"comment-text\" dangerouslySetInnerHTML={{ __html: comment.text }}></div>\n                            </div>\n                        ) : <div className=\"no-comments\">No comments yet</div>}\n                    </div> }\n\n                {\n                    (this.props.story.type !== 'job') &&\n                    <div className=\"see-on-hn-overlay\">\n                        <div className=\"see-on-hn\">\n                            <a href={this.props.hnUrl}>Read on HN</a>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default HackerCard;\n","import React, { Component } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport HackerCard from \"../HackerCard/HackerCard\";\nimport './Scroller.scss';\n\nclass Scroller extends Component {\n    constructor() {\n        super();\n        this.state = {\n            topStories: [],\n            storyData: [],\n            currentStoriesSlice: [],\n            currentOffset: 10,\n            storiesToLoad: 10,\n            loading: true,\n        }\n        this.mounted = false;\n        this.hnBaseUrl = 'https://hacker-news.firebaseio.com/v0/';\n    }\n\n    async componentDidMount() {\n        this.mounted = true;\n        if (this.mounted) {\n            var stateData = await this.getData();\n            this.setState(stateData);\n            document.addEventListener('scroll', this.trackScrolling);\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('scroll', this.trackScrolling);\n    }\n\n    async getData() {\n        if (this.state.loading !== true) {\n            this.setState({ loading: true });\n        }\n\n        var startIndex = this.state.currentOffset - this.state.storiesToLoad;\n\n        // pack current state into object, or get new info and work from here\n        var workingStateObject = {};\n\n        if (this.state.topStories.length === 0) {\n            const topStoriesResult = await fetch(`${this.hnBaseUrl}topstories.json`);\n            const topStoriesJson = await topStoriesResult.json();\n            const currentStoriesSlice = topStoriesJson.slice(startIndex, this.state.currentOffset);\n            workingStateObject.topStories = topStoriesJson;\n            workingStateObject.currentStoriesSlice = currentStoriesSlice;\n        } else {\n            workingStateObject.topStories = this.state.topStories;\n            workingStateObject.currentStoriesSlice = workingStateObject.topStories.slice(startIndex, this.state.currentOffset)\n        }\n\n        var topComments = [];\n\n        var storyDataArray = await Promise.all(workingStateObject.currentStoriesSlice.map(async (x) => {\n            var storyResponse = await fetch(`${this.hnBaseUrl}item/${x}.json`);\n            var story = await storyResponse.json();\n            if (story.kids) {\n                topComments = await Promise.all(story.kids.slice(0, 10).map(async comment => {\n                    var result = await fetch(`${this.hnBaseUrl}item/${comment}.json`);\n                    return await result.json();\n                }));\n            }\n\n            // remove deleted comments\n            var editedComments = [];\n            if (topComments.length > 0) {\n                topComments.forEach(x => {\n                    if (x === null || x === undefined || ('deleted' in x && x.deleted === true)) {\n                        return;\n                    }\n                    editedComments.push(x);\n                });\n            }\n\n            return { story: story, topComments: editedComments }\n\n        }));\n\n        // create new story data array, tack data on to the end of it\n        var currentDataArray = Object.assign([], this.state.storyData);\n        currentDataArray.push(...storyDataArray);\n\n        // calculate new offset\n        var newOffset = this.state.currentOffset + this.state.storiesToLoad;\n\n        return ({\n            topStories: workingStateObject.topStories,\n            currentStoriesSlice: workingStateObject.currentStoriesSlice,\n            storyData: currentDataArray,\n            currentOffset: newOffset,\n            loading: false\n        });\n    }\n\n    createHackerCards() {\n        if (this.state.storyData !== undefined && this.state.storyData.length > 0) {\n            var hackerCardData = this.state.storyData.map((x, index) => {\n                const story = x.story;\n                const topComments = x.topComments;\n\n                // Handle things that don't have a URL\n                // Go to hacker news if not\n                var calculatedUrl;\n                var displayUrl;\n                var hnUrl = `https://news.ycombinator.com/item?id=${story.id}`;\n\n                if (story.url) {\n                    var urlParts = story.url.split('/');\n                    calculatedUrl = story.url;\n                    displayUrl = urlParts[2];\n                } else {\n                    displayUrl = 'news.ycombinator.com';\n                    calculatedUrl = hnUrl;\n                }\n\n                var hackerCardProps = {\n                    story: story,\n                    calculatedUrl: calculatedUrl,\n                    displayUrl: displayUrl,\n                    hnUrl: hnUrl,\n                    storyKey: index,\n                    topComments: topComments\n                };\n\n                return (\n                    <HackerCard key={index} {...hackerCardProps} />\n                );\n            });\n        }\n        return hackerCardData;\n    }\n\n    trackScrolling = async () => {\n        var wrappedElement = document.getElementById('bottom-element');\n        if (this.isBottom(wrappedElement)) {\n            if (!this.state.loading) {\n                var stateData = await this.getData();\n                this.setState(stateData);\n            }\n        }\n    };\n\n    isBottom(el) {\n        return el.getBoundingClientRect().bottom <= (window.innerHeight + 1);\n    }\n\n    render() {\n        var hackerCards = this.createHackerCards();\n\n        if (hackerCards !== undefined && hackerCards.length > 0) {\n            return (\n                <div className='scroller-container'>\n                    {hackerCards}\n                    <div id=\"bottom-element\"></div>\n                    <div id='loading-icon-container'>\n                        <div id='loading-icon' className=\"loading\">\n                            <ClipLoader size={35} color='black' loading={this.state.loading} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div id='loading-icon' className='loading'>\n                <ClipLoader size={35} color='black' loading={this.state.loading} />\n            </div>\n        );\n    }\n}\n\nexport default Scroller;","import Scroller from './Scroller/Scroller';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"header\">\n        <div className=\"site-name\">\n          Hacker Scroller\n        </div>\n        <div className=\"about\">\n          <a href=\"https://github.com/android2221/hacker-scroller\">GitHub Project</a>\n        </div>\n      </div>\n      <Scroller></Scroller>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}