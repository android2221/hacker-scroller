{"version":3,"sources":["Slider.js","App.js","reportWebVitals.js","index.js"],"names":["Slider","state","topStories","storyData","currentStoriesSlice","displayData","currentOffset","storiesToLoad","loading","a","this","getData","setState","startIndex","fetch","topStoriesResult","json","topStoriesJson","slice","Promise","all","map","x","storyResponse","story","kids","comment","result","topComments","storyDataArray","currentDataArray","push","newOffset","calculatedUrl","displayUrl","hnUrl","id","url","urlParts","split","className","href","title","score","by","descendants","unix","fromNow","time","index","dangerouslySetInnerHTML","__html","text","length","size","color","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fff6a90b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Moment from 'react-moment';\nimport './Slider.scss';\n\nclass Slider extends Component {\n    constructor() {\n        super();\n        this.state = {\n            topStories: [],\n            storyData: [],\n            currentStoriesSlice: [],\n            displayData: [],\n            currentOffset: 10,\n            storiesToLoad: 10,\n            loading: true,\n        }\n    }\n\n    async componentDidMount() {\n        this.getData();\n    }\n\n    // slideChange(swiper) {\n    //     var slideIndex = swiper.activeIndex;\n    //     if (slideIndex >= (this.state.currentOffset - this.state.storiesToLoad) - 2) {\n    //         this.getData(swiper);\n    //     }\n    // }\n\n    async getData() {\n        this.setState({ loading: true });\n\n        var startIndex = this.state.currentOffset - this.state.storiesToLoad;\n\n        const topStoriesResult = await fetch(`https://hacker-news.firebaseio.com/v0/topstories.json`);\n        const topStoriesJson = await topStoriesResult.json();\n        const currentStoriesSlice = topStoriesJson.slice(startIndex, this.state.currentOffset);\n\n        var storyDataArray = await Promise.all(currentStoriesSlice.map(async (x) => {\n            var storyResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${x}.json`);\n            var story = await storyResponse.json();\n\n            if (story.kids) {\n                var topComments = await Promise.all(story.kids.map(async comment => {\n                    var result = await fetch(`https://hacker-news.firebaseio.com/v0/item/${comment}.json`);\n                    return await result.json();\n                }));\n            }\n            \n            return {story: story, topComments: topComments}\n\n        }));\n\n        var currentDataArray = this.state.storyData;\n\n        currentDataArray.push(...storyDataArray);\n\n        var newOffset = this.state.currentOffset + this.state.storiesToLoad;\n\n        const displayData = this.state.storyData.map(x => {\n            const story = x.story;\n            const topComments = x.topComments;\n\n            // Handle things that don't have a URL\n            // Go to hacker news if not\n\n            var calculatedUrl;\n            var displayUrl;\n            var hnUrl = `https://news.ycombinator.com/item?id=${story.id}`;\n\n            if (story.url) {\n                var urlParts = story.url.split('/');\n                calculatedUrl = story.url;\n                displayUrl = urlParts[2];\n            } else {\n                displayUrl = 'news.ycombinator.com';\n                calculatedUrl = `https://news.ycombinator.com/item?id=${story.id}`;\n            }\n\n            return (\n                <div className=\"hacker-card\" key={story.id}>\n                    <h2 className='story-title'>\n                        <a href={calculatedUrl}>\n                            {story.title}\n                        </a>\n                    </h2>\n                    <div className='story-url'>{displayUrl}</div>\n                    <div className='points-info'>\n                        {story.score} points by {story.by} | {story.descendants ? story.descendants : 0} comments | <Moment unix fromNow>{story.time}</Moment>\n                    </div>\n                    <div className='top-comments'>\n                        {topComments ? topComments.map((comment, index) => \n                            <div className=\"comment\" key={index}>\n                                <div className=\"comment-by\">{comment.by} said:</div>\n                                <div className=\"comment-text\" dangerouslySetInnerHTML={{__html: comment.text}}></div>\n                            </div>\n                            ) : <div className=\"no-comments\">No comments yet</div>}\n                    </div>\n                    <div className=\"see-on-hn-overlay\">\n                        <div className=\"see-on-hn\">\n                            <a href={hnUrl}>Read on HN</a>\n                        </div>\n                    </div>\n                </div>\n            )\n        });\n\n        this.setState({\n            topStories: topStoriesJson,\n            storyData: currentDataArray,\n            currentStoriesSlice: currentStoriesSlice,\n            currentOffset: newOffset,\n            displayData: displayData,\n            loading: false\n        });\n    }\n\n    render() {\n        if (this.state.displayData.length > 0) {\n            return (\n                <div className='slider-container'>\n                    {this.state.displayData}\n                    <div id='loading-icon' className='loading'>\n                        <ClipLoader size={35} color='black' loading={this.state.loading} />\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div id='loading-icon' className='loading'>\n                <ClipLoader size={35} color='black' loading={this.state.loading} />\n            </div>\n        );\n    }\n}\n\nexport default Slider;","import Slider from './Slider';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Slider></Slider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}