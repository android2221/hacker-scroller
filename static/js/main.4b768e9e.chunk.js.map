{"version":3,"sources":["HackerCard/HackerCard.js","Scroller/Scroller.js","App.js","reportWebVitals.js","index.js"],"names":["HackerCard","className","this","props","story","type","href","calculatedUrl","title","displayUrl","score","by","descendants","unix","fromNow","time","undefined","topComments","map","comment","index","dangerouslySetInnerHTML","__html","text","hnUrl","Component","Scroller","trackScrolling","a","wrappedElement","document","getElementById","isBottom","state","loading","getData","stateData","setState","topStories","storyData","currentStoriesSlice","currentOffset","storiesToLoad","mounted","hnBaseUrl","addEventListener","removeEventListener","startIndex","fetch","topStoriesResult","json","topStoriesJson","slice","Promise","all","x","storyResponse","kids","result","storyDataArray","currentDataArray","Object","assign","push","newOffset","hackerCardData","id","url","urlParts","split","hackerCardProps","storyKey","el","getBoundingClientRect","bottom","window","innerHeight","hackerCards","createHackerCards","size","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4b768e9e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Moment from 'react-moment';\nimport './HackerCard.scss';\n\nclass HackerCard extends Component {\n    render() {\n        return (\n            <div className={\"hacker-card \" + this.props.story.type} key={this.props.index}>\n                <h2 className='story-title'>\n                    <a href={this.props.calculatedUrl}>\n                        {this.props.story.title}\n                    </a>\n                </h2>\n                <div className='story-url'>{this.props.displayUrl}</div>\n                <div className='points-info'>\n                    {this.props.story.score} points by {this.props.story.by} | {this.props.story.descendants ? this.props.story.descendants : 0} comments | <Moment unix fromNow>{this.props.story.time}</Moment>\n                </div>\n                { (this.props.story.type !== 'job') &&\n                    <div className='top-comments'>\n                        {this.props.topComments !== undefined ? <h3>Top Comments</h3> : ''}\n                        {this.props.topComments !== undefined ? this.props.topComments.map((comment, index) =>\n                            <div className=\"comment\" key={index}>\n                                <div className=\"comment-by\">{comment.by} said:</div>\n                                <div className=\"comment-text\" dangerouslySetInnerHTML={{ __html: comment.text }}></div>\n                            </div>\n                        ) : <div className=\"no-comments\">No comments yet</div>}\n                    </div> }\n\n                {\n                    (this.props.story.type !== 'job') &&\n                    <div className=\"see-on-hn-overlay\">\n                        <div className=\"see-on-hn\">\n                            <a href={this.props.hnUrl}>Read on HN</a>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default HackerCard;\n","import React, { Component } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport HackerCard from \"../HackerCard/HackerCard\";\nimport './Scroller.scss';\n\nclass Scroller extends Component {\n    constructor() {\n        super();\n        this.state = {\n            topStories: [],\n            storyData: [],\n            currentStoriesSlice: [],\n            currentOffset: 10,\n            storiesToLoad: 10,\n            loading: true,\n        }\n        this.mounted = false;\n        this.hnBaseUrl = 'https://hacker-news.firebaseio.com/v0/';\n    }\n\n    async componentDidMount() {\n        this.mounted = true;\n        if (this.mounted) {\n            var stateData = await this.getData();\n            this.setState(stateData);\n            document.addEventListener('scroll', this.trackScrolling);\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('scroll', this.trackScrolling);\n    }\n\n    async getData() {\n        this.setState({ loading: true });\n\n        var startIndex = this.state.currentOffset - this.state.storiesToLoad;\n\n        const topStoriesResult = await fetch(`${this.hnBaseUrl}topstories.json`);\n        const topStoriesJson = await topStoriesResult.json();\n        const currentStoriesSlice = topStoriesJson.slice(startIndex, this.state.currentOffset);\n\n        var storyDataArray = await Promise.all(currentStoriesSlice.map(async (x) => {\n            var storyResponse = await fetch(`${this.hnBaseUrl}item/${x}.json`);\n            var story = await storyResponse.json();\n            if (story.kids) {\n                var topComments = await Promise.all(story.kids.slice(0, 10).map(async comment => {\n                    var result = await fetch(`${this.hnBaseUrl}item/${comment}.json`);\n                    return await result.json();\n                }));\n            }\n\n            return { story: story, topComments: topComments }\n\n        }));\n\n        var currentDataArray = Object.assign([], this.state.storyData);\n\n        currentDataArray.push(...storyDataArray);\n\n        var newOffset = this.state.currentOffset + this.state.storiesToLoad;\n\n        return ({\n            storyData: currentDataArray,\n            currentOffset: newOffset,\n            loading: false\n        });\n    }\n\n    createHackerCards() {\n        if (this.state.storyData !== undefined) {\n            var hackerCardData = this.state.storyData.map((x, index) => {\n                const story = x.story;\n                const topComments = x.topComments;\n\n                // Handle things that don't have a URL\n                // Go to hacker news if not\n                var calculatedUrl;\n                var displayUrl;\n                var hnUrl = `https://news.ycombinator.com/item?id=${story.id}`;\n\n                if (story.url) {\n                    var urlParts = story.url.split('/');\n                    calculatedUrl = story.url;\n                    displayUrl = urlParts[2];\n                } else {\n                    displayUrl = 'news.ycombinator.com';\n                    calculatedUrl = hnUrl;\n                }\n\n                var hackerCardProps = {\n                    story: story,\n                    calculatedUrl: calculatedUrl,\n                    displayUrl: displayUrl,\n                    hnUrl: hnUrl,\n                    storyKey: index,\n                    topComments: topComments\n                };\n\n                return (\n                    <HackerCard key={index} {...hackerCardProps} />\n                );\n            });\n        }\n        return hackerCardData;\n    }\n\n    trackScrolling = async () => {\n        var wrappedElement = document.getElementById('bottom-element');\n        if (this.isBottom(wrappedElement)) {\n            if (!this.state.loading) {\n                var stateData = await this.getData();\n                this.setState(stateData);\n            }\n        }\n    };\n\n    isBottom(el) {\n        return el.getBoundingClientRect().bottom <= (window.innerHeight + 1);\n    }\n\n    render() {\n        var hackerCards = this.createHackerCards();\n\n        if (hackerCards !== undefined) {\n            return (\n                <div className='scroller-container'>\n                    {hackerCards}\n                    <div id=\"bottom-element\"></div>\n                    <div id='loading-icon-container'>\n                        <div id='loading-icon' className=\"loading\">\n                            <ClipLoader size={35} color='black' loading={this.state.loading} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div id='loading-icon' className='loading'>\n                <ClipLoader size={35} color='black' loading={this.state.loading} />\n            </div>\n        );\n    }\n}\n\nexport default Scroller;","import Scroller from './Scroller/Scroller';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"header\">\n        <div className=\"site-name\">\n          Hacker Scroller\n        </div>\n        <div className=\"about\">\n          <a href=\"https://github.com/android2221/hacker-scroller\">GitHub Project</a>\n        </div>\n      </div>\n      <Scroller></Scroller>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}